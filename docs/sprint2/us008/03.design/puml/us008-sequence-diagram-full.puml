@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Vehicle Fleet Manager" as ADM
participant ":ProduceMaintenanceListUI" as UI
participant ":ProduceMaintenanceListController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "vehicleRepository:\nVehicleRepository" as VR
participant ":ApplicationSession" as _APP
participant "appSession\n:ApplicationSession" as APP
participant "currentSession\n:UserSession" as SESSAO
participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
participant "organization\n:Organization" as ORG
participant "list\n:List" as LISTA

activate ADM

        ADM -> UI : asks to list the vehicles that need maintenance

        activate UI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL
            UI -> CTRL** : create

            UI -> CTRL : getVehicleRepository()
            activate CTRL

                CTRL -> PLAT : getVehicleRepository()
                activate PLAT

                    PLAT --> CTRL: vehicleRepository
                deactivate PLAT

                UI -> CTRL : getVehicles()
                        activate CTRL

                            CTRL -> PLAT : getVehicles()
                            activate PLAT

                                PLAT --> CTRL: vehicles
                            deactivate PLAT



        UI -> CTRL : produceMaintenanecList()
        activate CTRL

            |||
            CTRL -> CTRL : getVFMFromSession()
            activate CTRL

                CTRL -> _APP: getInstance()
                activate _APP
                    _APP -> CTRL: appSession
                deactivate _APP


                CTRL -> APP: getCurrentSession()
                activate APP

                    APP --> CTRL: currentSession
                deactivate APP

                CTRL -> SESSAO: email = getUserEmail()
                activate SESSAO

                    SESSAO --> CTRL: email
                deactivate SESSAO


                CTRL -> PLAT: getOrganizationRepository(email)
                activate PLAT

                    PLAT --> CTRL: organizationRepository
                deactivate PLAT


                CTRL -> OrganizationRepository: getOrganizationByVFMEmail(email)
                activate OrganizationRepository

                    loop [for each organization
                        OrganizationRepository -> ORG : anyVFMHasEmail(email)
                        activate ORG

                             ORG --> OrganizationRepository : true/false
                        deactivate ORG
                    end
                    OrganizationRepository --> CTRL : organization
                deactivate OrganizationRepository

                CTRL -> ORG: getVFMByEmail(email)
                activate ORG

                    ORG --> CTRL : vfm
                deactivate ORG

                CTRL --> CTRL : vfm
            deactivate CTRL

            deactivate CTRL

            deactivate CTRL

            deactivate CTRL

            |||
            loop [for each vehicle
            UI -> VR: getPlateNumber()
            activate VR

            VR -> UI: plateNumber
            deactivate VR

            UI -> VR: getBrand()
                        activate VR

                        VR -> UI: brand
                        deactivate VR

            UI -> VR: getModel
                        activate VR

                        VR -> UI: model
                        deactivate VR


            UI -> VR: getCurrentKm()
                        activate VR

                        VR -> UI: currentKm()
                        deactivate VR

            UI -> VR: getLastMaintenanceDate()
                        activate VR

                        VR -> UI: lastMaintenanceDate
                        deactivate VR

            UI -> VR: getMaintenanceFrequencyKm()
                        activate VR

                        VR -> UI: maintenanceFrequencyKm
                        deactivate VR

            UI -> VR: plusDays(maintenanceFrequencyKm)
                        activate VR

                        VR -> UI: nextMaintenanceDate
                        deactivate VR

            UI -> VR: getPlateNumber()
                        activate VR

                        VR -> UI: plateNumber()
                        deactivate VR


            UI -> VR: plusDays(maintenanceFrequencyKm).until(LocalDate.now(), java.time.temporal.ChronoUnit.DAYS);
                        activate VR

                        VR -> UI: nextMaintenanceKms
                        deactivate VR

            end
            UI -> LISTA**: create

            activate LISTA
            LISTA -> LISTA: String maintenanceData = String.format("%s %s %s %.0f %s %s",plateNumber, brand, model, currentKms, lastMaintenanceDate.toString(), nextMaintenanceDate.toString());
            LISTA -> LISTA:                maintenanceList.add(maintenanceData);

                LISTA --> UI : maintenanceList

            deactivate LISTA

            UI --> ADM: displays maintenance list
    deactivate UI

deactivate ADM

@enduml