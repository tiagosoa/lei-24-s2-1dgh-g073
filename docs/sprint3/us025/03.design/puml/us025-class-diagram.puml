@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class AgendaEntry {
    - title: String
    - taskDescription: String
    - urgency: String
    - duration: String
    - associatedGreenSpace: GreenSpace
    - associatedTeam: Team
    - associatedVehicles: List<Vehicle>
    - status: String
    - startDate: LocalDate
    + AgendaEntry(String title, String taskDescription, String urgency, String duration, String status, LocalDate startDate)
    + boolean addGreenSpace(GreenSpace greenSpace)
    + boolean addTeam(Team team)
    + boolean addVehicle(Vehicle vehicle)
    + boolean equals(Object o)
    + int hashCode()
    + AgendaEntry clone()
}

class Agenda {
    - entries: List<AgendaEntry>
    - gsm: GSM
    + ToDoList(List<AgendaEntry> entries, GSM gsm)
    + boolean addEntry(AgendaEntry entry)
    + boolean postponeEntry(AgendaEntry entry, LocalDate postponeDate)
    + boolean cancelEntry(AgendaEntry entry)
    + boolean equals(Object o)
    + int hashCode()
    + AgendaEntry clone()
}

class AgendaRepository {
  - List<Agenda> agendas
  + boolean addAgenda(Agenda agenda)
  + List<Agenda> getAgendas()
  + Agenda getAgendaByGSM(GSM gsm)
  + boolean addAgenda(Agenda agenda)
}

class Repositories {
  + getInstance() : Repositories
  + getAgendaRepository() : AgendaRepository
}

class CancelEntryUI {
  - controller: CancelEntryController
  - agendaEntry: AgendaEntry
  + CancelEntryController getController()
  + void run()
  + void submitData()
  + void requestData()
  + AgendaEntry requestAgendaEntry()
}

class CancelEntryController {
  - agendaRepository: AgendaRepository
  - authenticationRepository: AuthenticationRepository
  + CancelEntryController(AgendaRepository agendaRepository, AuthenticationRepository authenticationRepository)
  + AgendaRepository getAgendaRepository()
  + AuthenticationRepository getAuthenticationRepository()
  + Optional<AgendaEntry> cancelEntry(AgendaEntry entry)
  + GSM getGSMFromSession()
}

class GSM {
   - String name
   - int vatNumber
   - String email
   - int phonenumber
}

note left of CancelEntryController
  - Selected AgendaEntry is read from GSM's input.
  - Updates the AgendaEntry.
end note

note left of GSM
 - Responsible for cancelling Agenda Entry.
 - Communicates with the CancelEntryUI
end note

note left of CancelEntryUI
  - UI for GSM to cancel entries in the Agenda
  - Communicates with CancelEntryController
  - Receives repositories from CancelEntryController
end note

note right of AgendaEntry
 - Registered by the GSM in the Agenda
 - Cancelled by the GSM
end note

GSM --> AgendaEntry: cancels
GSM --> Agenda: uses
AgendaEntry --> Agenda: shown in
GSM -> CancelEntryUI: uses

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

CancelEntryUI .> CancelEntryController

CancelEntryController -down-> Repositories : retrieves instances

Repositories -down-> AgendaRepository : accesses

CancelEntryController ..> AgendaRepository : agendaRepository

ApplicationSession --> "1" UserSession : userSession

CancelEntryController ..> ApplicationSession
CancelEntryController ..> UserSession

AgendaRepository ..> Agenda: stores

@enduml
