@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0


class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class TDLEntry {
    - title: String
    - taskDescription: String
    - urgency: String
    - duration: String
    - associatedGreenSpace: GreenSpace
    + TDLEntry(String title, String taskDescription, String urgency, String duration)
    + boolean addGreenSpace(GreenSpace greenSpace)
    + boolean equals(Object o)
    + int hashCode()
    + TDLEntry clone()
}

class AgendaEntry {
    - title: String
    - taskDescription: String
    - urgency: String
    - duration: String
    - associatedGreenSpace: GreenSpace
    - associatedTeam: Team
    - associatedVehicles: List<Vehicle>
    - status: String
    - startDate: LocalDate
    + AgendaEntry(String title, String taskDescription, String urgency, String duration, String status, LocalDate startDate)
    + boolean addGreenSpace(GreenSpace greenSpace)
    + boolean addTeam(Team team)
    + boolean addVehicle(Vehicle vehicle)
    + boolean equals(Object o)
    + int hashCode()
    + AgendaEntry clone()
}

class ToDoList {
    - entries: List<AgendaEntry>
    - gsm: GSM
    + ToDoList(List<AgendaEntry> entries, GSM gsm)
    + boolean addEntry(Entry entry)
    + boolean equals(Object o)
    + int hashCode()
    + ToDoList clone()
}

class Agenda {
    - entries: List<AgendaEntry>
    - gsm: GSM
    + Agenda(List<AgendaEntry> entries, GSM gsm)
    + boolean addEntry(AgendaEntry entry)
    + boolean postponeEntry(AgendaEntry entry)
    + boolean cancelEntry(AgendaEntry entry)
    + boolean equals(Object o)
    + int hashCode()
    + AgendaEntry clone()
}

class ToDoListRepository {
  - List<ToDoList> toDoLists
  + boolean addToDoList(ToDoList toDoList)
  + List<ToDoList> getToDoLists()
  + ToDoList getToDoListByGSM(GSM gsm)
  + boolean addToDoList(ToDoList toDoList)
}

class AgendaRepository {
  - List<Agenda> agendas
  + boolean addAgenda(Agenda agenda)
  + List<Agenda> getAgendas()
  + Agenda getAgendaByGSM(GSM gsm)
  + boolean addAgenda(Agenda agenda)
}

class Repositories {
  + getInstance() : Repositories
  + getToDoListRepository() : ToDoListRepository
  + getAgendaRepository() : AgendaRepository
  + getTaskRepository() : TaskRepository
}

class AddEntryAgendaUI {
  - controller: AddEntryAgendaController
  - toDoListEntry: TDLEntry
  - entryStatus: String
  - entryStartDate: LocalDate
  - associatedGreenSpace: GreenSpace
  + AddEntryAgendaController getController()
  + void run()
  + void submitData()
  + void requestData()
  + TDLEntry requestToDoListEntry()
  + LocalDate requestEntryStartingDate()
}

class AddEntryAgendaController {
  - greenSpaceRepository: GreenSpaceRepository
  - toDoListRepository: ToDoListRepository
  - agendaRepository: AgendaRepository
  - taskRepository: TaskRepository
  - authenticationRepository: AuthenticationRepository
  + AddEntryAgendaController(GreenSpaceRepository greenSpaceRepository, ToDoListRepository toDoListRepository, AgendaRepository agendaRepository, AuthenticationRepository authenticationRepository)
  + GreenSpaceRepository getGreenSpaceRepository()
  + ToDoListRepository getToDoListRepository()
  + AgendaRepository getAgendaRepository()
  + AuthenticationRepository getAuthenticationRepository()
  + Optional<AgendaEntry> addEntry(TDLEntry entry, String status, LocalDate startDate)
  + ToDoList getToDoList(GSM gsm)
  + Agenda getAgenda(GSM gsm)
  + GSM getGSMFromSession()
}


note left of AddEntryAgendaController
  - AgendaEntry data is read from GSM's input
  - Updates the Agenda
end note

note left of AddEntryAgendaUI
  - UI for GSM to add entries to the ToDoList
  - Communicates with AddEntryAgendaController
  - Receives repositories from AddEntryAgendaController
end note

note right of AgendaEntry
 - Registered by the GSM in the Agenda
end note

AgendaEntry --> Agenda: shown in
TDLEntry --> ToDoList: shown in
TDLEntry --> AgendaEntry: related to

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

AddEntryAgendaUI .> AddEntryAgendaController

AddEntryAgendaController -down-> Repositories : retrieves instances

Repositories -down-> ToDoListRepository : accesses
Repositories -down-> AgendaRepository : accesses

AddEntryAgendaController ..> ToDoListRepository : toDoListRepository
AddEntryAgendaController ..> AgendaRepository : agendaRepository

ApplicationSession --> "1" UserSession : userSession

AddEntryAgendaController ..> ApplicationSession
AddEntryAgendaController ..> UserSession

ToDoListRepository ..> ToDoList: stores
AgendaRepository ..> Agenda: stores

@enduml
