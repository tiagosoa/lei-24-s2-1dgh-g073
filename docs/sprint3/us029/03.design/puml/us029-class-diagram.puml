@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class Collaborator {
    - name: String
    - birthdate: String
    - admission date: String
    - address: String
    - mobile Contact: int
    - email contact: String
    - taxpayer number: int
    - ID doc type: String
    - ID number: int
    + addSkill(skill)
}

 class CollaboratorRepository {
   - List<Collaborator> collaborators
   + Optional<Collaborator> add(Collaborator collaborator)
   + Collaborator getCollaboratorByID(int IDnumber)
   + List<Collaborator> getCollaboratorList()
   + addCollaborator(Collaborator collaborator)
   + Optional<Collaborator> registerCollaborator( \nname: String, \nbirthdate: String, \nadmissiondate: String, \naddress: String, \nmobile: int, \nemail: String, \ntaxpayer: int, \nIDdoctype: String, \nIDnumber: int)
   + boolean validateCollaborator(Collaborator collaborator)
   + void updateCollaborator(Collaborator collaborator)
 }

class Repositories {
  + getInstance() : Repositories
  + getCollaboratorRepository() : CollaboratorRepository
  + getTeamRepository() : TeamRepository
  + getTaskRepository() : TaskRepository
  + getAuthenticationRepository() : AuthenticationRepository
}

class RecordTaskController {
    - teamRepository: TeamRepository
    - collaboratorRepository: CollaboratorRepository
    - taskRepository: TaskRepository
    - authenticationRepository: AuthenticationRepository
    + RecordTaskController(TeamRepository teamRepository, CollaboratorRepository collaboratorRepository, TaskRepository taskRepository, AuthenticationRepository authenticationRepository)
    + TeamRepository getTeamRepository()
    + CollaboratorRepository getCollaboratorRepository()
    + TaskRepository getTaskRepository()
    + AuthenticationRepository getAuthenticationRepository()
    + void markTaskAsDone(Task task)
    + Collaborator getCollaboratorFromSession()
    + Team getCollaboratorTeam(Collaborator collaborator)
}

class RecordTaskUI {
  - collaborator: Collaborator
  - team: Team
  - selectedTask: Task
  - collaboratorTasks: List<Task>
  + void run()
  + void requestData()
  + void submitData()
  + List<Task> requestTasks()
}

class Team {
    - collaborators: List<Collaborator>
    - teamID: int
    + boolean addCollaborator(collaborator)
    + boolean equals(Object o)
    + int hashCode()
    + Team clone()
}

class TaskRepository {
       - List<Task> tasks
       + Optional<Task> createTask(String title, String description, String status, LocalDate startDate, String status, String duration)
       + boolean addTask(Task task)
       + boolean validateTask(Task task)
       + Task getTaskByTeam(Team team)
       + List<Task> filterTasksByStatus(List<Task> tasks, String status)
       + void markTaskAsDone(Task task)
       + List<Task> getTaskList()
}

class Task {
    - title: String
    - description: String
    - status: String
    - startDate: LocalDate
    - duration: String
    - associatedTeam: Team
    + boolean addTeam(team)
    + boolean equals(Object o)
    + int hashCode()
    + Task clone()
}

class TeamRepository {
       - List<Team> teams
       + Optional<Team> createTeam(List<Collaborator>)
       + boolean addTeam(Team team)
       + boolean validateTeam(Team team)
       + Team getTeamByCollaborator(Collaborator collaborator)
       + List<Team> getTeamList()
}

Task -> Team: assigned with
Team -> Collaborator: consists of
Collaborator -> RecordTaskUI: uses

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

RecordTaskUI .> RecordTaskController

RecordTaskController -down-> Repositories : retrieves instances

Repositories -down-> CollaboratorRepository : accesses
Repositories -down-> TeamRepository : accesses
Repositories -down-> TaskRepository : accesses

RecordTaskController ..> TeamRepository : teamRepository
RecordTaskController ..> TaskRepository : taskRepository
RecordTaskController ..> CollaboratorRepository : collaboratorRepository

ApplicationSession --> "1" UserSession : userSession

RecordTaskController ..> ApplicationSession
RecordTaskController ..> UserSession

TeamRepository ..> Team: stores
TaskRepository ..> Task: stores
CollaboratorRepository ..> Collaborator: stores

@enduml