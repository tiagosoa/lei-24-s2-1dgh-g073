@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources Manager" as ADM
participant ":TeamGeneratorUI" as UI
participant ":TeamGeneratorController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "skillRepository:\nSkillRepository" as SR
participant "CollaboratorRepository:\ncollaboratorRepository" as CR
participant "team\n:Team" as EQUIPA

activate ADM

        ADM -> UI : asks to generate team

        activate UI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL
            UI -> CTRL** : create


                        CTRL -> RepositorySingleton : getInstance()
                        activate RepositorySingleton

                            RepositorySingleton --> CTRL: repositories
                        deactivate RepositorySingleton


        UI -> CTRL : getSkillRepository()

        CTRL -> PLAT : getSkillRepository()
                activate PLAT

            PLAT --> CTRL : skillRepository
            deactivate PLAT

            UI --> ADM : asks for minimum and maximum team size
        deactivate UI

    ADM -> UI : inputs minimum and maximum team size
    activate UI

    UI -> CTRL : getSkillList()
    activate CTRL

            CTRL -> SR : getSkillList()
                    activate SR

                SR --> CTRL : skillRepository
                deactivate SR
                deactivate CTRL



    UI -> ADM : shows skill list and asks to select suggested skills
    deactivate UI

    ADM -> UI : selects skills
    activate UI

    UI -> SR : parseSkills(String inputSkills)
    activate SR
    SR --> UI : requiredskills
    deactivate SR



          UI -> CTRL : getCollaboratorRepository()
          activate CTRL


            CTRL -> PLAT : getCollaboratorRepository()
                activate PLAT

            PLAT -> CTRL : collaboratorRepository
            deactivate PLAT



            |||
            CTRL -> CTRL : getHRMFromSession()
            activate CTRL

            ref over CTRL
            Get HRM
            end


                CTRL --> CTRL : hrm
            deactivate CTRL

            |||
            UI -> CTRL: generateTeam(int maxTeamSize, int minTeamSize, List<Skill> requiredSkills)
            CTRL -> CR: generateTeam(int maxTeamSize, int minTeamSize, List<Skill> requiredSkills)
            activate CR

                CR -> CR: filterCollaboratorsBySkills(List<Collaborator> collaborators, List<Skill> requiredSkills)
                activate CR

                CR --> CR: qualifiedcollaborators
                deactivate CR

                CR -> EQUIPA**: create

                CR -> EQUIPA: add(qualifiedCollaborators.get(i));

            CR --> CTRL: team
            deactivate CR

                        CTRL --> UI: team
                        deactivate CTRL

            UI -> ADM: displays the team
            ADM -> UI: either accepts or refuses the team
            UI -> ADM: displays operation success

deactivate ADM

@enduml