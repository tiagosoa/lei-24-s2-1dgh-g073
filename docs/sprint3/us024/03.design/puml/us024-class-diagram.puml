@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

class ApplicationSession
{
    + static getInstance()
    + getCurrentSession()
}

class UserSession
{
    + getUserEmail()
}

class AgendaEntry {
    - title: String
    - taskDescription: String
    - urgency: String
    - duration: String
    - associatedGreenSpace: GreenSpace
    - associatedTeam: Team
    - associatedVehicles: List<Vehicle>
    - status: String
    - startDate: LocalDate
    + AgendaEntry(String title, String taskDescription, String urgency, String duration, String status, LocalDate startDate)
    + boolean addGreenSpace(GreenSpace greenSpace)
    + boolean addTeam(Team team)
    + boolean addVehicle(Vehicle vehicle)
    + boolean equals(Object o)
    + int hashCode()
    + AgendaEntry clone()
}

class Agenda {
    - entries: List<AgendaEntry>
    - gsm: GSM
    + Agenda(List<AgendaEntry> entries, GSM gsm)
    + boolean addEntry(AgendaEntry entry)
    + boolean postponeEntry(AgendaEntry entry, LocalDate postponeDate)
    + boolean cancelEntry(AgendaEntry entry)
    + boolean equals(Object o)
    + int hashCode()
    + AgendaEntry clone()
}

class AgendaRepository {
  - List<Agenda> agendas
  + boolean addAgenda(Agenda agenda)
  + List<Agenda> getAgendas()
  + Agenda getAgendaByGSM(GSM gsm)
  + boolean addAgenda(Agenda agenda)
}

class Repositories {
  + getInstance() : Repositories
  + getAgendaRepository() : AgendaRepository
}

class PostponeEntryUI {
  - controller: PostponeEntryController
  - agendaEntry: AgendaEntry
  - postponeDate: LocalDate
  + PostponeEntryController getController()
  + void run()
  + void submitData()
  + void requestData()
  + AgendaEntry requestAgendaEntry()
  + LocalDate requestPostponeDate()
}

class PostponeEntryController {
  - agendaRepository: AgendaRepository
  - authenticationRepository: AuthenticationRepository
  + PostponeEntryController(AgendaRepository agendaRepository, AuthenticationRepository authenticationRepository)
  + AgendaRepository getAgendaRepository()
  + AuthenticationRepository getAuthenticationRepository()
  + Optional<AgendaEntry> postponeEntry(AgendaEntry entry, LocalDate date)
  + GSM getGSMFromSession()
}
note left of PostponeEntryController
  - Selected AgendaEntry is read from GSM's input.
  - Updates the AgendaEntry.
end note

note left of PostponeEntryUI
  - UI for GSM to postpone entries in the Agenda
  - Communicates with PostponeEntryController
  - Receives repositories from PostponeEntryController
end note

note right of AgendaEntry
 - Registered by the GSM in the Agenda
 - Postponed by the GSM
end note

Agenda --> AgendaEntry: shows

Repositories -> Repositories : instance
ApplicationSession -> ApplicationSession : instance

PostponeEntryUI .> PostponeEntryController

PostponeEntryController -down-> Repositories : retrieves instances

Repositories -down-> AgendaRepository : accesses

PostponeEntryController ..> AgendaRepository : agendaRepository

ApplicationSession --> "1" UserSession : userSession

PostponeEntryController ..> ApplicationSession
PostponeEntryController ..> UserSession

AgendaRepository ..> Agenda: stores

@enduml
